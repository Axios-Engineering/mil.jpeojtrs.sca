<project name="customTargets overrides" >
    <import file="${eclipse.pdebuild.templates}/headless-build/customTargets.xml"/>

    <!-- ===================================================================== -->
    <!-- Check out map files from correct repository -->
    <!-- Replace values for mapsCheckoutTag as desired. -->
    <!-- ===================================================================== -->
    <target name="getMapFiles">
        <copy todir="${buildDirectory}/maps">
            <fileset dir="${mapsDirectory}"/>
        </copy>
        <replace dir="${buildDirectory}/maps" token="@REPO@" value="${gitroot}"/>
        <replace dir="${buildDirectory}/maps" token="@TAG@" value="${tag}"/>
    </target>

    <!-- ===================================================================== -->
    <!--  Steps to do after the repositories have been processed -->
    <!-- ===================================================================== -->
    <target name="postProcessRepos">
        <exec executable="/bin/bash" dir="${buildDirectory}/target">
            <arg value="-c"/>
            <arg value="patch -p0 ${buildDirectory}/target/eclipse/features/org.eclipse.rcp_3.6.1.r361_v20100827-9OArFLdFjY-ThSQXmKvKz0_T/feature.xml ${basebuilder}/redhawk-patches/org.eclipse.rcp.patch"/>
        </exec>
        <exec executable="/bin/bash" dir="${buildDirectory}/target">
            <arg value="-c"/>
            <arg value="patch -p0  ${buildDirectory}/target/eclipse/features/org.eclipse.rcp.source_3.6.1.r361_v20100827-9OArFLdFjY-ThSQXmKvKz0_T/feature.xml ${basebuilder}/redhawk-patches/org.eclipse.rcp.source.patch"/>
        </exec>
    </target>

    <!-- ===================================================================== -->
    <!-- Steps to do after the build is done. -->
    <!-- ===================================================================== -->
    <target name="postBuild" depends="gatherLogs,publish,test">
    </target>

    <!-- ===================================================================== -->
    <!-- Steps to do to publish the build results -->
    <!-- ===================================================================== -->
    <target name="publish" depends="shouldPublish" if="p2.should.publish">
        <p2.mirror>
            <source location="file:${buildDirectory}/${buildLabel}/p2/${projectName}.sdk"/>
            <destination location="file:${publishBase}/${buildLabel}.${qualifier}.${timestamp}"/>
            <iu query="property[@name='org.eclipse.equinox.p2.type.category']"/>
        </p2.mirror>
        <symlink resource="${publishBase}/${buildLabel}.${qualifier}.${timestamp}" link="${publishBase}/latest" overwrite="true"/>
    </target>

    <target name="shouldPublish">
        <condition property="p2.should.publish">
            <or>
                <equals arg1="${publishP2}" arg2="true" casesensitive="false"/>
                <equals arg1="${publishP2}" arg2="1" casesensitive="false"/>
            </or>
        </condition>
    </target>

</project>
