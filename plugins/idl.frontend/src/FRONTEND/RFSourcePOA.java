package FRONTEND;


/**
* FRONTEND/RFSourcePOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from /data/Workspaces/dev_1-10_workspace/mil.jpeojtrs.sca/plugins/idl.frontend/idl/redhawk/FRONTEND/RFInfo.idl
* Wednesday, December 18, 2013 5:32:24 PM EST
*/


/*********************************/
public abstract class RFSourcePOA extends org.omg.PortableServer.Servant
 implements FRONTEND.RFSourceOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("_get_available_rf_inputs", new java.lang.Integer (0));
    _methods.put ("_set_available_rf_inputs", new java.lang.Integer (1));
    _methods.put ("_get_current_rf_input", new java.lang.Integer (2));
    _methods.put ("_set_current_rf_input", new java.lang.Integer (3));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {

  /** A list of all possible rf inputs that this source could switch to **/
       case 0:  // FRONTEND/RFSource/_get_available_rf_inputs
       {
         FRONTEND.RFInfoPkt $result[] = null;
         $result = this.available_rf_inputs ();
         out = $rh.createReply();
         FRONTEND.RFInfoPktSequenceHelper.write (out, $result);
         break;
       }


  /** A list of all possible rf inputs that this source could switch to **/
       case 1:  // FRONTEND/RFSource/_set_available_rf_inputs
       {
         FRONTEND.RFInfoPkt newAvailable_rf_inputs[] = FRONTEND.RFInfoPktSequenceHelper.read (in);
         this.available_rf_inputs (newAvailable_rf_inputs);
         out = $rh.createReply();
         break;
       }


  /** The current select source that is being output **/
       case 2:  // FRONTEND/RFSource/_get_current_rf_input
       {
         FRONTEND.RFInfoPkt $result = null;
         $result = this.current_rf_input ();
         out = $rh.createReply();
         FRONTEND.RFInfoPktHelper.write (out, $result);
         break;
       }


  /** The current select source that is being output **/
       case 3:  // FRONTEND/RFSource/_set_current_rf_input
       {
         FRONTEND.RFInfoPkt newCurrent_rf_input = FRONTEND.RFInfoPktHelper.read (in);
         this.current_rf_input (newCurrent_rf_input);
         out = $rh.createReply();
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:FRONTEND/RFSource:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public RFSource _this() 
  {
    return RFSourceHelper.narrow(
    super._this_object());
  }

  public RFSource _this(org.omg.CORBA.ORB orb) 
  {
    return RFSourceHelper.narrow(
    super._this_object(orb));
  }


} // class RFSourcePOA
