package FRONTEND;


/**
* FRONTEND/RFInfoPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from /data/Workspaces/dev_1-10_workspace/mil.jpeojtrs.sca/plugins/idl.frontend/idl/redhawk/FRONTEND/RFInfo.idl
* Wednesday, December 18, 2013 5:32:24 PM EST
*/


/*******************************/
public abstract class RFInfoPOA extends org.omg.PortableServer.Servant
 implements FRONTEND.RFInfoOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("_get_rf_flow_id", new java.lang.Integer (0));
    _methods.put ("_set_rf_flow_id", new java.lang.Integer (1));
    _methods.put ("_get_rfinfo_pkt", new java.lang.Integer (2));
    _methods.put ("_set_rfinfo_pkt", new java.lang.Integer (3));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {

  /** unique string that flows with data to describe its RF source*/
       case 0:  // FRONTEND/RFInfo/_get_rf_flow_id
       {
         String $result = null;
         $result = this.rf_flow_id ();
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }


  /** unique string that flows with data to describe its RF source*/
       case 1:  // FRONTEND/RFInfo/_set_rf_flow_id
       {
         String newRf_flow_id = in.read_string ();
         this.rf_flow_id (newRf_flow_id);
         out = $rh.createReply();
         break;
       }


  /** generic container to describe RF frontend */
       case 2:  // FRONTEND/RFInfo/_get_rfinfo_pkt
       {
         FRONTEND.RFInfoPkt $result = null;
         $result = this.rfinfo_pkt ();
         out = $rh.createReply();
         FRONTEND.RFInfoPktHelper.write (out, $result);
         break;
       }


  /** generic container to describe RF frontend */
       case 3:  // FRONTEND/RFInfo/_set_rfinfo_pkt
       {
         FRONTEND.RFInfoPkt newRfinfo_pkt = FRONTEND.RFInfoPktHelper.read (in);
         this.rfinfo_pkt (newRfinfo_pkt);
         out = $rh.createReply();
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:FRONTEND/RFInfo:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public RFInfo _this() 
  {
    return RFInfoHelper.narrow(
    super._this_object());
  }

  public RFInfo _this(org.omg.CORBA.ORB orb) 
  {
    return RFInfoHelper.narrow(
    super._this_object(orb));
  }


} // class RFInfoPOA
